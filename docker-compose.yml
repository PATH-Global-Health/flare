version: "3.5"

services:
  # Postgres
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123882
      POSTGRES_DB: flare
      PGDATA: /var/lib/postgresql/data/flare
    expose:
      - 5432
    ports:
      - "5432:5432"
    restart: on-failure
    volumes:
      - /Users/belendia/.postgres_flare:/var/lib/postgresql/data
    command: -p 5432

  # Redis
  redis:
    image: redis:6-alpine
    restart: on-failure

  # Flare
  web:
    container_name: flare_web
    build:
      context: .
      dockerfile: ./flare/Dockerfile
    command: >
      sh -c "python /flare/manage.py collectstatic --no-input
      && python /flare/manage.py makemigrations
      && python /flare/manage.py migrate  --noinput
      && python /flare/manage.py initadmin
      && gunicorn --workers=3 config.wsgi:application --bind 0.0.0.0:8000 --log-level debug"
    volumes:
      - ./flare:/flare
      - ./flare/staticfiles/admin:/usr/share/nginx/html/static/admin
      - ./flare/staticfiles/rest_framework:/usr/share/nginx/html/static/rest_framework
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    restart: on-failure

  # Celery worker
  celery_worker:
    container_name: flare_celery_worker
    build:
      context: .
      dockerfile: ./flare/Dockerfile
    command: >
      sh -c "celery -A config  worker -l info"
    volumes:
      - ./flare:/flare
    depends_on:
      - redis
      - web
    restart: on-failure

  # Celery worker
  celery_beat:
    container_name: flare_celery_beat
    build:
      context: .
      dockerfile: ./flare/Dockerfile
    command: >
      sh -c "celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/code
    depends_on:
      - redis
      - web
    restart: on-failure

  # Nginx - ReactJS Frontend + Reverse Proxy for the web
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - "8999:8999"
    # environment:
    #   - VIRTUAL_HOST=ussd.covid19.et
    #   - VIRTUAL_PORT=8999
    #- LETSENCRYPT_HOST=ussd.covid19.et
    #network_mode: "bridge"
    volumes:
      - ./flare/staticfiles/admin:/usr/share/nginx/html/static/admin
      - ./flare/staticfiles/rest_framework:/usr/share/nginx/html/static/rest_framework
    depends_on:
      - web
